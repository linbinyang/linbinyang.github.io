<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on </title>
    <link>https://linbinyang.github.io/categories/tech/</link>
    <description>Recent content in Tech on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://linbinyang.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How Does Mysql Index Work</title>
      <link>https://linbinyang.github.io/blog/mysql_index/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://linbinyang.github.io/blog/mysql_index/</guid>
      <description>The video belows really dives deep and explains the concept clearly:
  1. Start from BST(Binary Search Tree) Consider how to solve LeetCode 704: Binary Search:
Input: nums = [-1,0,3,5,9,12], target = 9 Output: 4 Explanation: 9 exists in nums and its index is 4 We use divide-and-conquer strategy and that reduces the time complexity of finding an element from O(n) to O(logn).
Here is the code:
class Solution { public: int search(vector&amp;lt;int&amp;gt;&amp;amp; nums, int target) { return helper(nums, 0, nums.</description>
    </item>
    
  </channel>
</rss>
